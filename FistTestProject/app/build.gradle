apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


//APK编译相关的介绍。   https://www.jb51.net/article/99623.htm


android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "one.example.com.myapplication3"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 20190129
        versionName "2019.01.29"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //指定room.schemaLocation生成的文件路径
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
//    if (isCompileHostReplugin.toBoolean()) {
//        apply plugin: 'replugin-host-gradle'//replugin
//    }
    buildTypes {
        release {
            minifyEnabled true//启动混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        languageTest {
            initWith(buildTypes.release)
        }
        languageTestExp {
            initWith(buildTypes.release)
        }
        dev {
            initWith(buildTypes.release)
        }
    }

    sourceSets {
        main {
            res.srcDir 'res'//main文件夹移动到src并列文件夹。
        }
    }


    repositories {
        flatDir {
            dirs 'libs'   // 这样就可以使用libs文件夹里面的jar和aar包
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

}

repositories {
    mavenLocal()
    jcenter()
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api(name: 'dev-console-release', ext: 'aar')
    //    testImplementation 'junit:junit:4.12'
    implementation base.stdlib
    implementation base.constraintlayout//constraintlayout布局框架

    // ViewModel和LiveData依赖google demo引用
    implementation base.lifecycle.extensions
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    annotationProcessor base.lifecycle.compiler

    //v4,v7引用包
    implementation base.appcompat
    implementation base.recyclerview       //RecyclerView引用包
    implementation base.cardview               //cardview引用包

    //Room的引用包
    implementation base.room.rxjava2       //如果要在数据库里面用到RxJava的值就需要添加这个引用
    annotationProcessor base.room.compiler
    // 如果不加这个引用就回报这个错误：Caused by: java.lang.RuntimeException: cannot find implementation for one.example.com.myapplication3.db.AppDataBase. AppDataBase_Impl does not exist

    //RxJava的引用包
    implementation base.rxjava.rxjava
    implementation base.rxjava.rxandroid

    //gson
    implementation base.gson

    // Retrofit库
    implementation base.retrofit.retrofit
    implementation base.okhttp3 // Okhttp库
    implementation base.retrofit.retrofitGson // 用Gson解析json的转换器
    implementation base.retrofit.rxJava
    implementation base.retrofit.java8

    //Fresco
    implementation base.fresco.fresco
    implementation base.fresco.animatedbase         //在 API < 14 上的机器支持 WebP 时，需要添加以下依赖
    implementation base.fresco.animatedgif          //支持GIF动图，需要添加以下依赖
    implementation base.fresco.webpsupport                //支持WebP，需要添加以下依赖
    implementation base.fresco.animatedwbp               //支持WebP动图，需要添加以下依赖
    implementation base.fresco.imagepipelineOkhttp        // 网络实现层想使用okhttp3，需要添加以下依赖

    //BlockCanary
    implementation base.blockCanary

    implementation 'com.pl:wheelview:0.7.2'//wheelView

//    implementation 'com.tonystark.android:socket:4.1.0'
//    implementation 'com.tonystark.android:socket-server:4.1.0'


//    implementation 'com.corundumstudio.socketio:netty-socketio:1.5.4'
    implementation 'io.netty:netty-all:4.0.13.Final'


    //RePlugin插件引用包
//    if (isCompileHostReplugin.toBoolean()) {
//        implementation 'com.qihoo360.replugin:replugin-host-lib:2.3.2'
//    }
    //引用Lib包
//    compile project(path: ':data')
    implementation project(':mvpsample')
    implementation project(':data')
    implementation project(':recyclerview')
    implementation project(':r_t') //中间件
    implementation project(':interfalib') //api 中间件，插件，host共同依赖。
// mqtt 包导入
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.59'

    //Room先前引用包
//    implementation "android.arch.persistence.room:runtime:1.0.0-alpha5"
//    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-alpha5"
//    implementation "android.arch.persistence.room:rxjava2:1.0.0"

    // ViewModel和LiveData依赖   Android Studio 3.2以下的版本，不包括 3.2
//    implementation "android.arch.lifecycle:extensions:1.1.0"
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.0.0"

//    implementation deps.lifecycle.extensions        //androidx.lifecycle:lifecycle-extensions:2.0.0
//    annotationProcessor deps.lifecycle.compiler     //androidx.lifecycle:lifecycle-compiler:2.0.0

    //下面的库有问题。
//    //okhttp3
//    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
//    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
//    //lifecycle
//    implementation 'android.arch.lifecycle:extensions:1.0.0-beta1'
//    implementation 'android.arch.lifecycle:runtime:1.0.3'
//    implementation 'android.arch.lifecycle:extensions:1.1.1'
//    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0'
//    //room
//    implementation "android.arch.persistence.room:runtime:1.0.0-alpha1"
//    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-alpha1"

}
